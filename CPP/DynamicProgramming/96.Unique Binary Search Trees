class Solution {
public:
int solve(int n,vector<int> &dp){
    if(n<=1){
        return 1;
    }
    if(dp[n]!=-1){
        return dp[n];
    }
    int ans = 0;
    for(int root = 1;root<=n;root ++){
        ans += solve(root - 1,dp) * solve(n-root,dp);
    }
    dp[n] = ans;
    return dp[n];
}
int solveTab(int n){
    vector<int> dp(n+1,0);
    dp[0] = dp[1] = 1;

    for(int i = 2;i<=n;i++){
        for(int j=1;j<=i;j++){
            dp[i] += dp[j-1] * dp[i-j];
        }
    }
    return dp[n];

}

int solveCat(int n){
    long long res = 1;
    for (int i = 1; i <= n; i++) {
        res *= (n+i);
        res /= i;
    }
    return res/(n+1);
}



    int numTrees(int n) {
        // return solve(n,dp);
        // return solveTab(n);
        return solveCat(n);

    }
};